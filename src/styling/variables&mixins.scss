@import "themes.scss";

@mixin heading {
  font-size: 2em;
  padding: 1em;
  font-weight: bold;
}

@mixin box-shadow {
  box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);
}

@mixin xxl-card($rotate: false) {
  @include card($margin: 0.5em, $height: 150px, $rotate: $rotate);
}

@mixin xl-card($rotate: false) {
  @include card($margin: 0.4em, $height: 130px, $rotate: $rotate);
}

@mixin large-card($rotate: false) {
  @include card($margin: 0.3em, $height: 110px, $rotate: $rotate);
}
@mixin medium-card($rotate: false) {
  @include card($margin: 0.2em, $height: 70px, $rotate: $rotate);
}
@mixin small-card($rotate: false) {
  @include card($margin: 3px, $height: 50px, $rotate: $rotate);
}

@mixin tiny-card($rotate: false) {
  @include card($margin: 1px, $height: 30px, $rotate: $rotate);
}

@mixin action-button{
  border:none;
  outline:none;
  border-radius: .5em;
  font-size:2em;
  font-weight:bold;
  padding:.5em;
  cursor:pointer;
  margin:.25em;
  width:auto;
  height:auto;
  @include themify {
    color:$primary;
    background: linear-gradient($background 10%, $highlight );
    // box-shadow: inset 0 0 3px 2px $primary-light; 
    border:2px solid $primary-light;
  }
  @media (max-width: 1500px) {
    font-size:1.5em;
    // padding: .4em;
    border-radius: .25em
  }
  @media (max-width: 1000px) {
    font-size:1em;
    // padding: .25em;
    border-radius: .25em
  }
  // @media (max-width: 800px) {
    
  // }
}

//$margin= around each shape, $height = long side of shape in px, $width refers to short side
@mixin card($margin, $height, $rotate) {
  $width: $height/2;
  @if $rotate {
    height: $height * 1.75;
    width: $height;
  } @else {
    width: $height * 1.75;
    height: $height;
  }
  .shape-wrapper {
    min-height: $height;
    display: flex;
    justify-content: center;
    align-items: center;
    @if $rotate {
      flex-direction: column;
    } @else {
      flex-direction: row;
    }
  }
  .shape-0,
  .shape-1 {
    @if $rotate {
      margin: $margin 0;
    } @else {
      margin: 0 $margin;
    }
  }

  .shape-0 {
    @if $rotate{
      @include rotate-diamond($height, $width);
    } @else {
      align-self: flex-end;
      @include diamond($width, $height);
    }
  }

  .shape-1 {
    @if $rotate{
      @include oval($height, $width, #{30%/50%}, 90deg);
    } @else {
      @include oval($width, $height);
    }
  }

  .shape-2 {
    @if $rotate{
      margin: $margin/2 0;
      @include another-shape($height, $width, 90% 0, 90deg);
    } @else {
      margin: 0 $margin/2;
      @include another-shape($width, $height);

    }
  }
}

//$border-rad should be %50%/30% or 30%/50% for rotate
@mixin oval($width, $height, $border-rad: #{50%/30%}, $bg-degs: 0deg) {
  width: $width;
  height: $height;
  border-radius: $border-rad;
  @include color-helper($bg-degs);
}

@mixin another-shape($width, $height, $border-rad: 0 90%, $bg-degs: 0deg) {
  width: $width;
  height: $height;
  border-radius: $border-rad;
  @include color-helper($bg-degs);
}

@mixin rotate-diamond($double-width, $double-height) {
  $width: $double-width/2;
  $height: $double-height/2;
  width: 0;
  height: 0;
  border: $height solid transparent;
  position: relative;
  left: $width * 0.75;
  // top:
  &:after {
    content: "";
    position: absolute;
    right: $height * 2;
    top: -$height;
    width: 0;
    height: 0;
    border: $height solid transparent;
  }
  @include diamond-color-helper($height, $width, true);
}

@mixin diamond($double-width, $double-height) {
  $width: $double-width/2;
  $height: $double-height/2;
  width: 0;
  height: 0;
  border: $width solid transparent;
  position: relative;
  top: -$double-height/2;
  &:after {
    content: "";
    position: absolute;
    left: -$width;
    top: $height;
    width: 0;
    height: 0;
    border: $width solid transparent;
  }
  @include diamond-color-helper($width, $height);
}

// used to create smaller triangle on top of larger triangle for shading-2 where only the border is colored
@mixin small-diamond($half-width, $half-height) {
  z-index: 10;
  width: 0;
  height: 0;
  border: $half-width - 2px solid transparent;
  position: relative;
  top: -($half-width - 6px);
  left: -($half-width - 2px);
  &:after {
    content: "";
    z-index: 11;
    position: absolute;
    left: -($half-width - 2px);
    top: $half-height - 4px;
    width: 0;
    height: 0;
    border: $half-width - 2px solid transparent;
  }
}

// used to create shading on rotated diamonds
@mixin rotate-small-diamond($half-width, $half-height) {
  z-index: 10;
  width: 0;
  height: 0;
  position: relative;
  border: $half-height - 2px solid transparent;
  top: -$half-height + 2px;
  left: -$half-width;
  &:after {
    content: "";
    z-index: 11;
    position: absolute;
    width: 0;
    height: 0;
    border: $half-height - 2px solid transparent;
    right: $half-width - 4px;
    top: -($half-height - 2px);
  }
}
// arguments are for border names. For rotated diamond, values should be $name-1=left, $name-2=right
@mixin diamond-color-helper($width, $height, $rotate: false) {
  $name-1: bottom;
  $name-2: top;
  $mixin-name: small-diamond;
  @if $rotate {
    $name-1: left;
    $name-2: right;
    $mixin-name: rotate-small-diamond;
  }

  &.color-0 {
    @include themify {
      border-#{$name-1}: $height solid $primary;
      &:after {
        border-#{$name-2}: $height solid $primary;
      }
    }
  }
  &.color-1 {
    @include themify {
      border-#{$name-1}: $height solid $accent;
      &:after {
        border-#{$name-2}: $height solid $accent;
      }
    }
  }
  &.color-2 {
    @include themify {
      border-#{$name-1}: $height solid $highlight;
      &:after {
        border-#{$name-2}: $height solid $highlight;
      }
    }
  }
  &.shading-2 {
    .inner {
      @if not $rotate {
        @include small-diamond($width, $height);
      } @else {
        @include rotate-small-diamond($height, $width);
      }
      @include themify {
        border-#{$name-1}: $height - 4px solid $card-bg;
        &:after {
          border-#{$name-2}: $height - 4px solid $card-bg;
        }
      }
    }
  }
  &.shading-1 {
    .inner {
      @if not $rotate {
        @include small-diamond($width, $height);
      } @else {
        @include rotate-small-diamond($height, $width);
      }
      @include themify {
        border-#{$name-1}: $height - 4px solid $card-bg;
      }
      &:after {
        border-#{$name-2}: $height - 4px solid transparent;
      }
    }
  }
}

@mixin color-helper($bg-degs) {
  &.color-0 {
    @include themify {
      border: 2px solid $primary;
      background: $primary;
    }
    &.shading-1 {
      @include themify {
        background-image: linear-gradient($bg-degs, $primary 50%, $card-bg 50%);
      }
    }
  }
  &.color-1 {
    @include themify {
      border: 2px solid $accent;
      background: $accent;
    }
    &.shading-1 {
      @include themify {
        background-image: linear-gradient($bg-degs, $accent 50%, $card-bg 50%);
      }
    }
  }
  &.color-2 {
    @include themify {
      border: 2px solid $highlight;
      background: $highlight;
    }
    &.shading-1 {
      @include themify {
        background-image: linear-gradient(
          $bg-degs,
          $highlight 50%,
          $card-bg 50%
        );
      }
    }
  }
  &.shading-2 {
    @include themify {
      background: $card-bg;
    }
  }
}
